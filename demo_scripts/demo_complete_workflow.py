"""
Demo script for Complete OCR + LangExtract + Schema Editor + Excel Export Workflow.

This demo showcases the complete end-to-end functionality:
- User-configurable schema editor for extraction fields
- Real OCR processing for scanned documents
- LangExtract AI-powered data extraction
- Real-time analytics dashboard
- Professional Excel export

Run this script to test the complete automated report extraction system.
"""

import sys
import os
from pathlib import Path
from PySide6.QtWidgets import QApplication, QVBoxLayout, QWidget, QHBoxLayout, QPushButton, QLabel
from PySide6.QtCore import QTimer, Qt
from PySide6.QtGui import QFont
import tempfile

# Add project root to path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from gui.main_window import MainWindow


def create_vietnamese_sample_files():
    """Create Vietnamese sample files to test OCR and extraction."""
    sample_texts = [
        """
        C√îNG TY C·ªî PH·∫¶N C√îNG NGH·ªÜ VIETTECH
        B√ÅO C√ÅO T√ÄI CH√çNH QU√ù 4 NƒÇM 2024
        
        TH√îNG TIN DOANH NGHI·ªÜP:
        T√™n c√¥ng ty: C√¥ng ty C·ªï ph·∫ßn C√¥ng ngh·ªá VietTech
        ƒê·ªãa ch·ªâ: S·ªë 123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM
        Email li√™n h·ªá: ir@viettech.com.vn
        
        C√ÅC CH·ªà S·ªê T√ÄI CH√çNH:
        ‚Ä¢ Doanh thu thu·∫ßn: 125.750.000.000 VNƒê
        ‚Ä¢ L·ª£i nhu·∫≠n sau thu·∫ø: 22.500.000.000 VNƒê  
        ‚Ä¢ T·ªïng t√†i s·∫£n: 450.000.000.000 VNƒê
        ‚Ä¢ S·ªë l∆∞·ª£ng nh√¢n vi√™n: 850 ng∆∞·ªùi
        ‚Ä¢ T·ª∑ su·∫•t l·ª£i nhu·∫≠n: 18.2%
        ‚Ä¢ TƒÉng tr∆∞·ªüng doanh thu: 24.5%
        
        Lƒ®NH V·ª∞C HO·∫†T ƒê·ªòNG:
        Ph√°t tri·ªÉn ph·∫ßn m·ªÅm v√† d·ªãch v·ª• c√¥ng ngh·ªá th√¥ng tin
        """,
        
        """
        NG√ÇN H√ÄNG TH∆Ø∆†NG M·∫†I C·ªî PH·∫¶N DIGITAL VIETNAM
        B·∫¢NG C√ÇN ƒê·ªêI K·∫æ TO√ÅN QU√ù 3/2024
        
        TH√îNG TIN T·ªî CH·ª®C:
        T√™n: Ng√¢n h√†ng TMCP Digital Vietnam
        Tr·ª• s·ªü ch√≠nh: 456 L√™ L·ª£i, Q.1, TP.HCM  
        ƒêi·ªán tho·∫°i: (028) 3829-xxxx
        Website: www.digitalvietnam.bank
        Email: info@digitalvietnam.bank
        
        HI·ªÜU QU·∫¢ KINH DOANH:
        - Thu nh·∫≠p l√£i thu·∫ßn: 2.850.000.000.000 VNƒê
        - L√£i t·ª´ ho·∫°t ƒë·ªông d·ªãch v·ª•: 456.000.000.000 VNƒê
        - L·ª£i nhu·∫≠n tr∆∞·ªõc thu·∫ø: 1.200.000.000.000 VNƒê
        - ROE: 16.8%
        - ROA: 1.4%
        - T·ªïng nh√¢n s·ª±: 4.250 ng∆∞·ªùi
        
        NG√ÄNH NGH·ªÄ: D·ªãch v·ª• t√†i ch√≠nh ng√¢n h√†ng
        """,
        
        """
        T·∫¨P ƒêO√ÄN B√ÅN L·∫∫ SAIGON MART
        B√ÅO C√ÅO TH∆Ø·ªúNG NI√äN 2024
        
        GI·ªöI THI·ªÜU C√îNG TY:
        T√™n doanh nghi·ªáp: T·∫≠p ƒëo√†n B√°n l·∫ª Saigon Mart
        VƒÉn ph√≤ng: T·∫ßng 15, T√≤a nh√† Bitexco, Q.1, TPHCM
        Hotline: 1900-xxxx
        Email: contact@saigonmart.vn
        
        T·ªîNG QUAN T√ÄI CH√çNH:
        ‚òÖ Doanh thu b√°n h√†ng: 89.500.000.000.000 VNƒê
        ‚òÖ Chi ph√≠ h√†ng b√°n: 67.200.000.000.000 VNƒê  
        ‚òÖ L·ª£i nhu·∫≠n g·ªôp: 22.300.000.000.000 VNƒê
        ‚òÖ Bi√™n l·ª£i nhu·∫≠n g·ªôp: 24.9%
        ‚òÖ TƒÉng tr∆∞·ªùng YoY: 18.7%
        ‚òÖ T·ªïng s·ªë c·ª≠a h√†ng: 1.250 ƒëi·ªÉm
        ‚òÖ Nh√¢n vi√™n to√†n h·ªá th·ªëng: 25.000 ng∆∞·ªùi
        
        NG√ÄNH: B√°n l·∫ª v√† ti√™u d√πng
        """,
        
        """
        C√îNG TY TNHH NƒÇNG L∆Ø·ª¢NG XANH VI·ªÜT NAM
        TH√îNG TIN T√ÄI CH√çNH QU√ù I/2024
        
        H·ªí S∆† DOANH NGHI·ªÜP:
        C√¥ng ty: NƒÉng l∆∞·ª£ng Xanh Vi·ªát Nam Limited
        ƒê·ªãa ch·ªâ: KCN Hi·ªáp Ph∆∞·ªõc, TP. Th·ªß ƒê·ª©c, TPHCM
        Fax: (028) 3715-xxxx  
        Email: info@greenenergy.vn
        
        B·∫¢NG S·ªê LI·ªÜU:
        ‚Üí Doanh thu ho·∫°t ƒë·ªông: 45.800.000.000 VNƒê
        ‚Üí Chi ph√≠ s·∫£n xu·∫•t: 32.100.000.000 VNƒê
        ‚Üí EBITDA: 18.500.000.000 VNƒê
        ‚Üí Margin EBITDA: 40.4%  
        ‚Üí TƒÉng tr∆∞·ªüng: 32.1%
        ‚Üí C√¥ng su·∫•t l·∫Øp ƒë·∫∑t: 150 MW
        ‚Üí Lao ƒë·ªông: 680 nh√¢n vi√™n
        
        Lƒ®NH V·ª∞C: NƒÉng l∆∞·ª£ng t√°i t·∫°o
        """,
        
        """
        C√îNG TY C·ªî PH·∫¶N V·∫¨N T·∫¢I LOGISTICS MI·ªÄN NAM
        FINANCIAL REPORT Q2 2024
        
        COMPANY INFORMATION:
        Name: Southern Logistics Corporation  
        Address: 789 Nguyen Van Linh, District 7, HCMC
        Phone: +84-28-3xxx-xxxx
        Contact Email: ir@southernlogistics.vn
        
        FINANCIAL HIGHLIGHTS:
        ‚óÜ Revenue: 156.700.000.000 VND
        ‚óÜ Operating Profit: 18.900.000.000 VND
        ‚óÜ Net Income: 14.200.000.000 VND
        ‚óÜ Operating Margin: 12.1%
        ‚óÜ Growth Rate: 15.3%
        ‚óÜ Fleet Size: 450 vehicles
        ‚óÜ Employees: 1.850 people
        ‚óÜ Warehouses: 25 locations
        
        INDUSTRY: Transportation & Logistics
        """
    ]
    
    # Create temporary files
    temp_dir = Path(tempfile.gettempdir()) / "langextract_complete_demo"
    temp_dir.mkdir(exist_ok=True)
    
    file_paths = []
    for i, text in enumerate(sample_texts):
        file_path = temp_dir / f"vietnamese_report_{i+1}.txt"
        file_path.write_text(text.strip(), encoding='utf-8')
        file_paths.append(str(file_path))
    
    return file_paths


class CompleteWorkflowDemoWindow(MainWindow):
    """Demo window for complete OCR + LangExtract + Schema Editor workflow."""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Complete Workflow Demo - OCR + LangExtract + Schema + Excel Export")
        self.setup_demo_ui()
        self.load_sample_files()
    
    def setup_demo_ui(self):
        """Add demo-specific UI elements."""
        # Add demo info banner
        demo_banner = QWidget()
        demo_banner.setStyleSheet("""
            QWidget {
                background-color: #FEF3C7;
                border: 1px solid #F59E0B;
                border-radius: 8px;
                padding: 16px;
                margin: 8px;
            }
        """)
        
        banner_layout = QVBoxLayout(demo_banner)
        
        # Title
        title_label = QLabel("üî• Complete Automated Report Extraction Demo")
        title_font = QFont()
        title_font.setPointSize(16)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setStyleSheet("color: #92400E; margin-bottom: 8px;")
        banner_layout.addWidget(title_label)
        
        # Description
        desc_label = QLabel(
            "üéØ Complete end-to-end workflow: User-configurable schema ‚Üí OCR processing ‚Üí "
            "AI-powered extraction ‚Üí Real-time charts ‚Üí Professional Excel export. "
            "Test with Vietnamese financial reports!"
        )
        desc_label.setStyleSheet("color: #92400E; font-size: 12px; font-weight: 500;")
        desc_label.setWordWrap(True)
        banner_layout.addWidget(desc_label)
        
        # Workflow steps
        steps_layout = QHBoxLayout()
        
        steps = [
            "1Ô∏è‚É£ Configure Schema",
            "2Ô∏è‚É£ Load Files", 
            "3Ô∏è‚É£ Start Processing",
            "4Ô∏è‚É£ View Live Charts",
            "5Ô∏è‚É£ Export Excel"
        ]
        
        for step in steps:
            step_label = QLabel(step)
            step_label.setStyleSheet("color: #92400E; font-size: 11px; font-weight: 600; padding: 4px 8px; background-color: #FBBF24; border-radius: 4px; margin: 2px;")
            steps_layout.addWidget(step_label)
        
        steps_layout.addStretch()
        
        # Demo controls
        reload_btn = QPushButton("üîÑ Reload Sample Files")
        reload_btn.setStyleSheet("""
            QPushButton {
                background-color: #F59E0B;
                color: white;
                border: none;
                padding: 6px 12px;
                border-radius: 4px;
                font-size: 11px;
                font-weight: 600;
            }
            QPushButton:hover {
                background-color: #D97706;
            }
        """)
        reload_btn.clicked.connect(self.load_sample_files)
        steps_layout.addWidget(reload_btn)
        
        banner_layout.addLayout(steps_layout)
        
        # Insert banner at the top
        central_widget = self.centralWidget()
        layout = central_widget.layout()
        layout.insertWidget(0, demo_banner)
    
    def load_sample_files(self):
        """Load Vietnamese sample financial reports."""
        try:
            sample_files = create_vietnamese_sample_files()
            
            # Clear existing files
            self.file_list.clear()
            
            # Add sample files
            for file_path in sample_files:
                self.file_list.add_file(file_path)
            
            self.show_toast_message(f"Loaded {len(sample_files)} Vietnamese financial reports", "success")
            
            # Update UI
            self.update_ui_state()
            
            # Show helpful message
            self.status_bar.showMessage(
                f"{len(sample_files)} Vietnamese reports loaded - Configure schema to enable processing!"
            )
            
        except Exception as e:
            self.show_toast_message(f"Failed to load sample files: {str(e)}", "error")


def main():
    """Run the complete workflow demo."""
    app = QApplication(sys.argv)
    
    # Set application properties
    app.setApplicationName("Complete Workflow Demo")
    app.setApplicationVersion("1.0.0")
    
    # Apply global styling
    app.setStyleSheet("""
        QApplication {
            font-family: "Segoe UI", "Arial", sans-serif;
        }
    """)
    
    # Create and show demo window
    demo_window = CompleteWorkflowDemoWindow()
    demo_window.show()
    
    print("üî• Complete Automated Report Extraction Demo Started!")
    print("\nüéØ End-to-End Workflow Features:")
    print("  1Ô∏è‚É£  User-configurable Schema Editor (define your own extraction fields)")
    print("  2Ô∏è‚É£  Real OCR processing with EasyOCR (Vietnamese + English support)")
    print("  3Ô∏è‚É£  AI-powered extraction with LangExtract + Gemini")
    print("  4Ô∏è‚É£  Real-time analytics dashboard with 4 chart types")
    print("  5Ô∏è‚É£  Professional Excel export with Data + Summary sheets")
    print("\nüìã Vietnamese Test Data:")
    print("  ‚Ä¢ VietTech - Technology company financial report")
    print("  ‚Ä¢ Digital Vietnam Bank - Banking sector report")
    print("  ‚Ä¢ Saigon Mart - Retail conglomerate annual report")
    print("  ‚Ä¢ Green Energy Vietnam - Renewable energy quarterly")
    print("  ‚Ä¢ Southern Logistics - Transportation & logistics")
    print("\nüõ†Ô∏è Complete Workflow Instructions:")
    print("  Step 1: Click 'Configure Schema' to define extraction fields")
    print("  Step 2: Sample Vietnamese files are pre-loaded")
    print("  Step 3: Click 'Start Processing' (OCR + AI extraction)")
    print("  Step 4: Switch to 'Analytics Dashboard' for live charts")
    print("  Step 5: Click 'Export to Excel' for professional reports")
    print("\nüîß Technology Stack:")
    print("  ‚Ä¢ OCR: EasyOCR with Vietnamese language support")
    print("  ‚Ä¢ AI Extraction: LangExtract + Google Gemini")
    print("  ‚Ä¢ Charts: Matplotlib with real-time updates")
    print("  ‚Ä¢ Export: Professional Excel with xlsxwriter")
    print("  ‚Ä¢ UI: Modern PySide6 with responsive design")
    
    return app.exec()


if __name__ == "__main__":
    sys.exit(main()) 